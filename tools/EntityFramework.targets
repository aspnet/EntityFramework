<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PackagesTargetsFile>$(MSBuildProjectDirectory)\$(IntermediateOutputPath)Packages.targets</PackagesTargetsFile>
    <KpmListLogFile>$(MSBuildProjectDirectory)\$(IntermediateOutputPath)kpm-list.log</KpmListLogFile>
    <BuildDependsOn>CheckPackageReferences;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETPortable'">
    <ImplicitlyExpandDesignTimeFacades>false</ImplicitlyExpandDesignTimeFacades>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
  </PropertyGroup>
  <UsingTask
    TaskName="WritePackageReferences"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <TargetsFile ParameterType="System.String" Required="true" />
      <PackageReferences ParameterType="System.String" Required="true" />
      <ReferenceContract ParameterType="System.Boolean" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        using (var writer = new StreamWriter(TargetsFile, append: false))
        {
            writer.WriteLine("<Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003'>");
            writer.WriteLine("  <ItemGroup>");

            foreach (var assemblyPath in File.ReadLines(PackageReferences).Where(File.Exists))
            {
                var assembly = Path.GetFileNameWithoutExtension(assemblyPath);
                var hintPath = assemblyPath;

                if (ReferenceContract)
                {
                    var contractPath = Path.GetFullPath(
                        Path.Combine(Path.GetDirectoryName(assemblyPath), @"..\contract\" + assembly + ".dll"));
                    if (File.Exists(contractPath))
                    {
                        hintPath = contractPath;
                    }
                }

                writer.WriteLine("    <Reference Include='{0}'>", assembly);
                writer.WriteLine("      <HintPath>{0}</HintPath>", hintPath);
                writer.WriteLine("      <Private>True</Private>");
                writer.WriteLine("    </Reference>");
            }

            writer.WriteLine("  </ItemGroup>");
            writer.WriteLine("</Project>");
        }
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="CheckPackageReferences">
    <Error
      Text="Package references not found. Run 'build initialize' before opening the solution for the first time."
      Condition="!Exists('$(PackagesTargetsFile)')" />
  </Target>
  <Target
    Name="WritePackageReferences"
    Condition="Exists('$(MSBuildProjectDirectory)\project.json')">
    <PropertyGroup>
    </PropertyGroup>
    <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETPortable'">
      <KpmFramework>dnxcore50</KpmFramework>
      <ReferenceContract>true</ReferenceContract>
    </PropertyGroup>
    <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' != '.NETPortable'">      
      <KpmFramework>net451</KpmFramework>
      <ReferenceContract>false</ReferenceContract>
    </PropertyGroup>
    <MakeDir Directories="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)" />
    <Exec Command='kpm list -a --framework $(KpmFramework) > "$(KpmListLogFile)"' />
    <WritePackageReferences
      TargetsFile="$(PackagesTargetsFile)"
      PackageReferences="$(KpmListLogFile)"
      ReferenceContract="$(ReferenceContract)" />
  </Target>
  <Import Project="$(PackagesTargetsFile)" Condition="Exists('$(PackagesTargetsFile)')" />
</Project>
